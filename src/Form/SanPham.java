package Form;

import Connect.Ketnoi;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.FileReader;
import java.sql.*;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class SanPham extends javax.swing.JFrame {

    private int index;
    DefaultTableModel model = new DefaultTableModel();
    Ketnoi k = new Ketnoi();
    private static String driver;
    private static String dburl;
    private static String user;
    private static String pass;
    static{
        try {
            BufferedReader out = new BufferedReader(new FileReader("change.txt"));
            driver = out.readLine();
            dburl = out.readLine();
            user = out.readLine();
            pass = out.readLine(); 
            Class.forName(driver);
        } catch (Exception e) {
        }
    }
    Connection cn;
    public SanPham() {
        initComponents();
        setTitle("Sản Phẩm");
        setLocationRelativeTo(null);
        k.connect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        btnTien = new javax.swing.JButton();
        btnLui = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtMaSanPham = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTenSanPham = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtGiaSanPham = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtLoaiSanPham = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtMaNhaCungCap = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnTaoMoi = new javax.swing.JButton();
        btnMoFile = new javax.swing.JButton();
        btnDong = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtTrangThai = new javax.swing.JTextField();
        btnLast = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        txtTimKiem.setBackground(new java.awt.Color(231, 231, 231));
        txtTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtTimKiem.setText("Nhập mã nhân viên để tìm kiếm");
        txtTimKiem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(231, 231, 231), 8));
        txtTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTimKiemMouseClicked(evt);
            }
        });
        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });

        btnTimKiem.setBackground(new java.awt.Color(22, 123, 255));
        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        btnTimKiem.setText("Tìm kiếm\n");
        btnTimKiem.setBorderPainted(false);
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnTien.setBackground(new java.awt.Color(22, 123, 255));
        btnTien.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnTien.setForeground(new java.awt.Color(255, 255, 255));
        btnTien.setText(">>");
        btnTien.setBorderPainted(false);
        btnTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTienActionPerformed(evt);
            }
        });

        btnLui.setBackground(new java.awt.Color(22, 123, 255));
        btnLui.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnLui.setForeground(new java.awt.Color(255, 255, 255));
        btnLui.setText("<<");
        btnLui.setBorderPainted(false);
        btnLui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuiActionPerformed(evt);
            }
        });

        tblSanPham.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ SẢN PHẨM", "MÃ NHÀ CUNG CẤP", "TÊN SẢN PHẨM", "GIÁ SẢN PHẨM", "LOẠI SẢN PHẨM", "TRẠNG THÁI"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.setSelectionBackground(new java.awt.Color(22, 123, 255));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSanPham);
        if (tblSanPham.getColumnModel().getColumnCount() > 0) {
            tblSanPham.getColumnModel().getColumn(0).setMinWidth(70);
            tblSanPham.getColumnModel().getColumn(0).setPreferredWidth(70);
            tblSanPham.getColumnModel().getColumn(0).setMaxWidth(70);
        }

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Mã sản phẩm");

        txtMaSanPham.setBackground(new java.awt.Color(231, 231, 231));
        txtMaSanPham.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaSanPham.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(231, 231, 231), 4));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Tên sản phẩm");

        txtTenSanPham.setBackground(new java.awt.Color(231, 231, 231));
        txtTenSanPham.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTenSanPham.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(231, 231, 231), 4));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Giá sản phẩm");

        txtGiaSanPham.setBackground(new java.awt.Color(231, 231, 231));
        txtGiaSanPham.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtGiaSanPham.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(231, 231, 231), 4));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Loại sản phẩm");

        txtLoaiSanPham.setBackground(new java.awt.Color(231, 231, 231));
        txtLoaiSanPham.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtLoaiSanPham.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(231, 231, 231), 4));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Mã nhà cung cấp");

        txtMaNhaCungCap.setBackground(new java.awt.Color(231, 231, 231));
        txtMaNhaCungCap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaNhaCungCap.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(231, 231, 231), 4));

        btnThem.setBackground(new java.awt.Color(46, 213, 115));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setText("Thêm");
        btnThem.setBorderPainted(false);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnTaoMoi.setBackground(new java.awt.Color(22, 123, 255));
        btnTaoMoi.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnTaoMoi.setForeground(new java.awt.Color(255, 255, 255));
        btnTaoMoi.setText("Tạo mới");
        btnTaoMoi.setBorderPainted(false);
        btnTaoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoMoiActionPerformed(evt);
            }
        });

        btnMoFile.setBackground(new java.awt.Color(255, 165, 2));
        btnMoFile.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnMoFile.setForeground(new java.awt.Color(255, 255, 255));
        btnMoFile.setText("Mở File");
        btnMoFile.setBorderPainted(false);
        btnMoFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoFileActionPerformed(evt);
            }
        });

        btnDong.setBackground(new java.awt.Color(47, 53, 66));
        btnDong.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnDong.setForeground(new java.awt.Color(255, 255, 255));
        btnDong.setText("Đóng");
        btnDong.setBorderPainted(false);
        btnDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDongActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 71, 87));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setText("Xoá");
        btnXoa.setBorderPainted(false);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 51, 255));
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setText("Sửa");
        btnSua.setBorderPainted(false);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Trạng thái");

        txtTrangThai.setBackground(new java.awt.Color(231, 231, 231));
        txtTrangThai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTrangThai.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(231, 231, 231), 4));
        txtTrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTrangThaiActionPerformed(evt);
            }
        });

        btnLast.setBackground(new java.awt.Color(22, 123, 255));
        btnLast.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnLast.setForeground(new java.awt.Color(255, 255, 255));
        btnLast.setText(">|");
        btnLast.setBorderPainted(false);
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnFirst.setBackground(new java.awt.Color(22, 123, 255));
        btnFirst.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnFirst.setForeground(new java.awt.Color(255, 255, 255));
        btnFirst.setText("|<");
        btnFirst.setBorderPainted(false);
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnTaoMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(btnMoFile, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnDong, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(464, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 961, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(183, 183, 183)
                                .addComponent(btnFirst)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLui)
                                .addGap(18, 18, 18)
                                .addComponent(btnTien)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLast)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGiaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLoaiSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaNhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnFirst, btnLast, btnLui, btnTien});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btnTien, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btnLui, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(txtTimKiem))
                .addGap(70, 70, 70)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem)
                            .addComponent(btnMoFile)
                            .addComponent(btnDong)
                            .addComponent(btnXoa)
                            .addComponent(btnTaoMoi)
                            .addComponent(btnSua)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaNhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGiaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLoaiSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDongActionPerformed
        try {
            int hoi = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn thoát không ?", "Thoát", JOptionPane.YES_NO_OPTION);
            if (hoi != JOptionPane.YES_OPTION) {
                return;
            } else {
            }
            Menu mn = new Menu();
            mn.setVisible(true);
            this.setVisible(false);
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this, "lỗi thoát");
        }
    }//GEN-LAST:event_btnDongActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        try {
            index = tblSanPham.getSelectedRow();
            showDetail(index);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi Click Table");
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnLuiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuiActionPerformed
        try {
            if (index >= 0) {
                index--;
                showDetail(index);
            }
        } catch (Exception e) {
        }

    }//GEN-LAST:event_btnLuiActionPerformed

    private void btnTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTienActionPerformed
        try {
            if (index <= tblSanPham.getRowCount() - 1) {
                index++;
                showDetail(index);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnTienActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        if (tblSanPham.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Trong bảng chưa có dữ liệu");
            return;
        } else {
            index = tblSanPham.getRowCount();
            for (int i = 0; i < index; i++) {
                if (tblSanPham.getValueAt(i, 0).toString().equalsIgnoreCase(txtTimKiem.getText())) {
                    showDetail(i);
                    JOptionPane.showMessageDialog(this, "Bạn đã tìm được sản phẩm : " + tblSanPham.getValueAt(i, 2).toString());
                    break;
                }
            }
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnTaoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoMoiActionPerformed
        try {
            clearForm();
            txtMaSanPham.requestFocus();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnTaoMoiActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        try {
            int hoi = JOptionPane.showConfirmDialog(this, "Bạn có muốn xoá không ?");
            if (hoi != JOptionPane.YES_OPTION) {
                return;
            } else {
            }
            String sql = "delete from sanpham where masp = ?";
            PreparedStatement st = k.cn.prepareStatement(sql);
            st.setString(1, txtMaSanPham.getText());
            st.executeUpdate();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            if (!checkNull()) {
                return;
            }
            try {
                Integer.parseInt(txtGiaSanPham.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "Giá sản phẩm phải là số");
                return;
            }
            if (!checkDup()) {
                return;
            }
            String sql = "insert into sanpham values(?,?,?,?,?,?)";
            PreparedStatement st = k.cn.prepareStatement(sql);
            st.setString(1, txtMaSanPham.getText());
            st.setString(2, txtMaNhaCungCap.getText());
            st.setString(3, txtTenSanPham.getText());
            st.setString(4, txtGiaSanPham.getText());
            st.setString(5, txtLoaiSanPham.getText());
            st.setString(6, txtTrangThai.getText());
            st.executeUpdate();
            loadDataToTable();

        } catch (SQLException e) {
            System.out.println(e);

        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        try {
            if (!checkNull()) {
                return;
            }
            if (!checkNum()) {
                return;
            }
            String sql = "Update sanpham set  mancc = ?, tensp = ?, giasp = ?, loaisp = ?, trangthai = ? where masp = ?";
            PreparedStatement st = k.cn.prepareStatement(sql);
            st.setString(1, txtMaNhaCungCap.getText());
            st.setString(2, txtTenSanPham.getText());
            st.setDouble(3, Double.parseDouble(txtGiaSanPham.getText()));
            st.setString(4, txtLoaiSanPham.getText());
            st.setString(5, txtTrangThai.getText());
            st.setString(6, txtMaSanPham.getText());
            if (tblSanPham.getValueAt(index, 0).toString().equalsIgnoreCase(txtMaSanPham.getText())) {
                st.executeUpdate();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Mã sản phẩm phải giống trong bảng");
            }
            loadDataToTable();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnMoFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoFileActionPerformed
        if ("Quangdzqua".equalsIgnoreCase(JOptionPane.showInputDialog("Mời nhập mã công ty để mở dữ liệu"))) {
            loadDataToTable();
            index = 0;
            showDetail(index);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Bạn đã nhập sai");
        }
    }//GEN-LAST:event_btnMoFileActionPerformed

    private void txtTrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTrangThaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTrangThaiActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        try {
            if (tblSanPham.getRowCount() > 0) {
                index = tblSanPham.getRowCount() - 1;
                showDetail(index);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        try {
            if (tblSanPham.getRowCount() > 0) {
                index = 0;
                showDetail(index);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnFirstActionPerformed

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
//        System.out.println(e);
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void txtTimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTimKiemMouseClicked
        txtTimKiem.setText("");
    }//GEN-LAST:event_txtTimKiemMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SanPham().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDong;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnLui;
    private javax.swing.JButton btnMoFile;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnTaoMoi;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTien;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtGiaSanPham;
    private javax.swing.JTextField txtLoaiSanPham;
    private javax.swing.JTextField txtMaNhaCungCap;
    private javax.swing.JTextField txtMaSanPham;
    private javax.swing.JTextField txtTenSanPham;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtTrangThai;
    // End of variables declaration//GEN-END:variables
    private void loadDataToTable() {
        try {
            model = (DefaultTableModel) tblSanPham.getModel();
            model.setRowCount(0);
            cn = DriverManager.getConnection(dburl,user,pass);
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("select * from SANPHAM");
            while (rs.next()) {
                Vector row = new Vector();
                row.add(rs.getString(1));
                row.add(rs.getString(2));
                row.add(rs.getString(3));
                row.add(rs.getDouble(4));
                row.add(rs.getString(5));
                row.add(rs.getString(6));
                model.addRow(row);
            }
        } catch (SQLException e) {
            System.out.println("Lỗi tải dữ liệu");
        }
    }

    private void showDetail(int index) {
        txtMaSanPham.setText(tblSanPham.getValueAt(index, 0).toString());
        txtMaNhaCungCap.setText(tblSanPham.getValueAt(index, 1).toString());
        txtTenSanPham.setText(tblSanPham.getValueAt(index, 2).toString());
        txtGiaSanPham.setText(tblSanPham.getValueAt(index, 3).toString());
        txtLoaiSanPham.setText(tblSanPham.getValueAt(index, 4).toString());
        txtTrangThai.setText(tblSanPham.getValueAt(index, 5).toString());
        tblSanPham.setRowSelectionInterval(index, index);
    }

    private void clearForm() {
        txtMaSanPham.setText("");
        txtMaNhaCungCap.setText("");
        txtTenSanPham.setText("");
        txtGiaSanPham.setText("");
        txtLoaiSanPham.setText("");
        txtTrangThai.setText("");
    }

    private boolean checkNull() {
        if (txtMaSanPham.getText().isEmpty()) {
            txtMaSanPham.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Mã sản phẩm trống");
            return false;
        } else if (txtTenSanPham.getText().isEmpty()) {
            txtTenSanPham.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Tên sản phẩm trống");
            return false;
        } else if (txtMaSanPham.getText().isEmpty()) {
            txtMaNhaCungCap.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Mã nhà cung cấp trống");
            return false;
        } else if (txtGiaSanPham.getText().isEmpty()) {
            txtGiaSanPham.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Giá sản phẩm trống");
            return false;
        } else if (txtLoaiSanPham.getText().isEmpty()) {
            txtLoaiSanPham.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Loại sản phẩm trống");
            return false;
        } else if (txtTrangThai.getText().isEmpty()) {
            txtTrangThai.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Trạng thái trống");
            return false;
        } else {
            return true;
        }
    }

    private boolean checkDup() {
        if (tblSanPham.getValueAt(index, 0).toString().equalsIgnoreCase(txtMaSanPham.getText())) {
            txtMaSanPham.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Mã sản phẩm đã tồn tại");
            return false;
        } else {
            return true;
        }
    }

    private boolean checkNum() {
        try {
            Double.parseDouble(txtGiaSanPham.getText());
            return true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Giá sản phẩm phải là số");
            txtGiaSanPham.requestFocus();
            return false;
        }
    }

}
