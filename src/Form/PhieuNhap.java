package Form;

import Connect.Ketnoi;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.FileReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mint
 */
public class PhieuNhap extends javax.swing.JFrame {

    /**
     * Creates new form PhieuNhap
     */
    int index;
    Ketnoi k = new Ketnoi();
    DefaultTableModel model = new DefaultTableModel();
    private static String driver;
    private static String dburl;
    private static String user;
    private static String pass;
    static{
        try {
            BufferedReader out = new BufferedReader(new FileReader("change.txt"));
            driver = out.readLine();
            dburl = out.readLine();
            user = out.readLine();
            pass = out.readLine(); 
            Class.forName(driver);
        } catch (Exception e) {
        }
    }
    Connection cn; 

    public PhieuNhap() {
        initComponents();
        setTitle("Phiếu nhập");
        setLocationRelativeTo(null);
        k.connect();
//        loadDataToTable();
        index = 0;
//        showDetail(index);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhieuNhap = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtMaPhieuNhap = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnTaoMoi = new javax.swing.JButton();
        btnMoifile = new javax.swing.JButton();
        btnDong = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        txtNgayNhap = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMaNCC = new javax.swing.JTextField();
        btnLast = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtDongia = new javax.swing.JTextField();
        txtDVT = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        txtTimKiem.setBackground(new java.awt.Color(231, 231, 231));
        txtTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtTimKiem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(231, 231, 231), 8));

        btnTimKiem.setBackground(new java.awt.Color(22, 123, 255));
        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        btnTimKiem.setText("Tìm kiếm\n");
        btnTimKiem.setBorderPainted(false);
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnNext.setBackground(new java.awt.Color(22, 123, 255));
        btnNext.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnNext.setForeground(new java.awt.Color(255, 255, 255));
        btnNext.setText(">>");
        btnNext.setBorderPainted(false);
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrev.setBackground(new java.awt.Color(22, 123, 255));
        btnPrev.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnPrev.setForeground(new java.awt.Color(255, 255, 255));
        btnPrev.setText("<<");
        btnPrev.setBorderPainted(false);
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        tblPhieuNhap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblPhieuNhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ PHIẾU NHẬP", "MÃ SẢN PHẨM", "ĐƠN VỊ TÍNH", "ĐƠN GIÁ", "SỐ LƯỢNG", "THÀNH TIỀN", "NGÀY NHẬP", "MÃ NHÀ CUNG CẤP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, true, true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPhieuNhap.setSelectionBackground(new java.awt.Color(22, 123, 255));
        tblPhieuNhap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhieuNhapMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPhieuNhap);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Mã phiếu nhập");

        txtMaPhieuNhap.setBackground(new java.awt.Color(231, 231, 231));
        txtMaPhieuNhap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaPhieuNhap.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(231, 231, 231), 4));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Mã sản phẩm");

        txtMaSP.setBackground(new java.awt.Color(231, 231, 231));
        txtMaSP.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaSP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(231, 231, 231), 4));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Đơn vị tính");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Số lượng");

        txtSoLuong.setBackground(new java.awt.Color(231, 231, 231));
        txtSoLuong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSoLuong.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(231, 231, 231), 4));

        btnThem.setBackground(new java.awt.Color(46, 213, 115));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setText("Thêm");
        btnThem.setBorderPainted(false);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnTaoMoi.setBackground(new java.awt.Color(22, 123, 255));
        btnTaoMoi.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnTaoMoi.setForeground(new java.awt.Color(255, 255, 255));
        btnTaoMoi.setText("Tạo mới");
        btnTaoMoi.setBorderPainted(false);
        btnTaoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoMoiActionPerformed(evt);
            }
        });

        btnMoifile.setBackground(new java.awt.Color(255, 165, 2));
        btnMoifile.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnMoifile.setForeground(new java.awt.Color(255, 255, 255));
        btnMoifile.setText("Mở File");
        btnMoifile.setBorderPainted(false);
        btnMoifile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoifileActionPerformed(evt);
            }
        });

        btnDong.setBackground(new java.awt.Color(47, 53, 66));
        btnDong.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnDong.setForeground(new java.awt.Color(255, 255, 255));
        btnDong.setText("Đóng");
        btnDong.setBorderPainted(false);
        btnDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDongActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 71, 87));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setText("Xoá");
        btnXoa.setBorderPainted(false);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        txtNgayNhap.setBackground(new java.awt.Color(231, 231, 231));
        txtNgayNhap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNgayNhap.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(231, 231, 231), 4));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Ngày nhập");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Mã nhà cung cấp");

        txtMaNCC.setBackground(new java.awt.Color(231, 231, 231));
        txtMaNCC.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaNCC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(231, 231, 231), 4));

        btnLast.setBackground(new java.awt.Color(22, 123, 255));
        btnLast.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnLast.setForeground(new java.awt.Color(255, 255, 255));
        btnLast.setText(">|");
        btnLast.setBorderPainted(false);
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnFirst.setBackground(new java.awt.Color(22, 123, 255));
        btnFirst.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnFirst.setForeground(new java.awt.Color(255, 255, 255));
        btnFirst.setText("|<");
        btnFirst.setBorderPainted(false);
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 51, 255));
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setText("Sửa");
        btnSua.setBorderPainted(false);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Đơn giá");

        txtDongia.setBackground(new java.awt.Color(231, 231, 231));
        txtDongia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDongia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(231, 231, 231), 4));

        txtDVT.setBackground(new java.awt.Color(231, 231, 231));
        txtDVT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDVT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(231, 231, 231), 4));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 961, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(167, 167, 167)
                        .addComponent(btnFirst)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPrev)
                        .addGap(26, 26, 26)
                        .addComponent(btnNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLast))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnTaoMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(btnMoifile, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDong, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(84, 84, 84)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDongia, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDVT, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnFirst, btnLast, btnNext, btnPrev});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(txtTimKiem))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem)
                            .addComponent(btnMoifile)
                            .addComponent(btnDong)
                            .addComponent(btnXoa)
                            .addComponent(btnTaoMoi)
                            .addComponent(btnSua)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtDVT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDongia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(103, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDongActionPerformed
        // TODO add your handling code here:
         try {
            int hoi = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn thoát không ?", "Thoát", JOptionPane.YES_NO_OPTION);
            if (hoi != JOptionPane.YES_OPTION) {
                return;
            } else {
            }
            Menu mn = new Menu();
            mn.setVisible(true);
            this.setVisible(false);
        } catch (HeadlessException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnDongActionPerformed

    private void tblPhieuNhapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhieuNhapMouseClicked
        try {
            index = tblPhieuNhap.getSelectedRow();
            showDetail(index);
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_tblPhieuNhapMouseClicked

    private void btnTaoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoMoiActionPerformed
        try {
            clearForm();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnTaoMoiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        try {
            if (!checkNull()) {
                return;
            }
            try {
                Integer.parseInt(txtSoLuong.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "Số lượng phải là số");
                return;
            }
            try {
                Double.parseDouble(txtDongia.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "Đơn giá phải là số");
                return;
            }

            String sql = "insert into phieunhap values(?,?,?,?,?,?,?)";
            PreparedStatement st = k.cn.prepareStatement(sql);
            st.setString(1, txtMaPhieuNhap.getText());
            st.setString(2, txtMaSP.getText());
            st.setString(3, txtDVT.getText());
            st.setString(4, txtDongia.getText());
            st.setString(5, txtSoLuong.getText());
            st.setString(6, txtNgayNhap.getText());
            st.setString(7, txtMaNCC.getText());
            st.executeUpdate();
            loadDataToTable();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        try {
            int hoi = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không ?");
            if (hoi != JOptionPane.YES_OPTION) {
                return;
            } else {
            }
            String sql = "delete from phieunhap where MAPHIEUNHAP = ?";
            PreparedStatement st = k.cn.prepareStatement(sql);
            st.setString(1, txtMaPhieuNhap.getText());
            JOptionPane.showMessageDialog(this, "Đã xoá thành công phiếu xuất : " + txtMaPhieuNhap.getText());
            st.executeUpdate();
            loadDataToTable();
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(this, "lỗi xóa");
            System.out.println(e);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        try {
            if (!checkNull()) {
                return;
            }
            try {
                Integer.parseInt(txtSoLuong.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "Số lượng phải là số");
                return;
            }
            try {
                Double.parseDouble(txtDongia.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "Đơn giá phải là số");
                return;
            }

            String sql = "update phieunhap set masp = ? ,donvitinh = ? , dongia = ?,soluong =?, ngaynhap = ?, mancc =? where maphieunhap = ?";
            PreparedStatement st = k.cn.prepareStatement(sql);
            st.setString(1, txtMaSP.getText());
            st.setString(2, txtDVT.getText());
            st.setString(3, txtDongia.getText());
            st.setString(4, txtSoLuong.getText());
            st.setString(5, txtNgayNhap.getText());
            st.setString(6, txtMaNCC.getText());
            st.setString(7, txtMaPhieuNhap.getText());
            if (tblPhieuNhap.getValueAt(index, 0).toString().equalsIgnoreCase(txtMaPhieuNhap.getText())) {
                st.executeUpdate();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Mã phiếu nhập phải giống trong bảng");
            }
            loadDataToTable();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, "Lỗi sửa, mã nhà cung cấp, mã sản phẩm phải có trong data");
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        if (tblPhieuNhap.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Trong bảng chưa có dữ liệu");
            return;
        } else {
            index = tblPhieuNhap.getRowCount();
            for (int i = 0; i < index; i++) {
                if (tblPhieuNhap.getValueAt(i, 0).toString().equalsIgnoreCase(txtTimKiem.getText())) {
                    showDetail(i);
                    JOptionPane.showMessageDialog(this, "Bạn đã tìm được Phiếu nhập : " + tblPhieuNhap.getValueAt(i, 0).toString());
                    break;
                }
            }
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        try {
            index = 0;
            showDetail(index);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        try {
            index = tblPhieuNhap.getRowCount() - 1;
            showDetail(index);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        try {
            if (index >= 0) {
                index--;
                showDetail(index);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        try {
            if (index <= tblPhieuNhap.getRowCount() - 1) {
                index++;
                showDetail(index);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnMoifileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoifileActionPerformed
        if ("Quangdzqua".equalsIgnoreCase(JOptionPane.showInputDialog("Mời nhập mã công ty để mở dữ liệu"))) {
            loadDataToTable();
            index = 0;
            showDetail(index);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Bạn đã nhập sai");
        }
    }//GEN-LAST:event_btnMoifileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhieuNhap().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDong;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnMoifile;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnTaoMoi;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPhieuNhap;
    private javax.swing.JTextField txtDVT;
    private javax.swing.JTextField txtDongia;
    private javax.swing.JTextField txtMaNCC;
    private javax.swing.JTextField txtMaPhieuNhap;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtNgayNhap;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
private void clearForm() {
        txtMaPhieuNhap.setText("");
        txtMaSP.setText("");
        txtNgayNhap.setText("");
        txtSoLuong.setText("");
        txtMaNCC.setText("");
        txtDongia.setText("");
        txtDVT.setText("");
    }

    private void loadDataToTable() {
        try {
            model = (DefaultTableModel) tblPhieuNhap.getModel();
            model.setRowCount(0);
            cn = DriverManager.getConnection(dburl,user,pass);
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("select Maphieunhap, masp, donvitinh,dongia,soluong, soluong *dongia as thanhtien,CONVERT(varchar, NGAYNHAP, 101) as NGAYNHAP, mancc from PHIEUNHAP");
            while (rs.next()) {
                Vector row = new Vector();
                row.add(rs.getString(1));
                row.add(rs.getString(2));
                row.add(rs.getString(3));
                row.add(rs.getInt(4));
                row.add(rs.getInt(5));
                row.add(rs.getInt(6));
                row.add(rs.getString(7));
                row.add(rs.getString(8));
                model.addRow(row);
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    private void showDetail(int index) {
        txtMaPhieuNhap.setText(tblPhieuNhap.getValueAt(index, 0).toString());
        txtMaSP.setText(tblPhieuNhap.getValueAt(index, 1).toString());
        txtDVT.setText(tblPhieuNhap.getValueAt(index, 2).toString());
        txtDongia.setText(tblPhieuNhap.getValueAt(index, 3).toString());
        txtSoLuong.setText(tblPhieuNhap.getValueAt(index, 4).toString());
        txtNgayNhap.setText(tblPhieuNhap.getValueAt(index, 6).toString());
        txtMaNCC.setText(tblPhieuNhap.getValueAt(index, 7).toString());
        tblPhieuNhap.setRowSelectionInterval(index, index);
    }

    private boolean checkNull() {
        if (txtMaPhieuNhap.getText().isEmpty()) {
            txtMaPhieuNhap.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Mã phiếu nhập trống");
            return false;
        } else if (txtMaSP.getText().isEmpty()) {
            txtMaSP.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Mã sản phẩm trống");
            return false;
        } else if (txtDVT.getText().isEmpty()) {
            txtDVT.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Đơn vị tính trống");
            return false;
        } else if (txtSoLuong.getText().isEmpty()) {
            txtSoLuong.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Số lượng trống");
            return false;
        } else if (txtNgayNhap.getText().isEmpty()) {
            txtNgayNhap.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Ngày nhập trống");
            return false;
        } else if (txtMaNCC.getText().isEmpty()) {
            txtMaNCC.requestFocus();
            JOptionPane.showMessageDialog(this, "Mã nhà cung cấp trống");
            return false;
        } else {
            return true;
        }
    }
}
